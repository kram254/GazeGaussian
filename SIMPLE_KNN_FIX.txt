================================================================================
SIMPLE-KNN INSTALLATION ERROR - FIX
================================================================================

ERROR MESSAGE:
--------------
error: subprocess-exited-with-error
× python setup.py develop did not run successfully.
└─> exit code: 1

CAUSE:
------
The simple-knn module is a C++/CUDA extension that requires:
1. Build tools (ninja, setuptools)
2. CUDA compiler
3. Proper environment variables

================================================================================
SOLUTION: ADD BUILD DEPENDENCIES
================================================================================

BEFORE installing simple-knn, run this cell:

!pip install --upgrade pip setuptools wheel ninja

Then install with limited parallel jobs:

%cd submodules/simple-knn
!MAX_JOBS=4 pip install -e . -v
%cd ../..

The -v flag shows verbose output
MAX_JOBS=4 limits parallel compilation (prevents OOM)

================================================================================
UPDATED NOTEBOOKS
================================================================================

✓ colab_complete_setup.ipynb - COMPLETE FIXED VERSION
  - Includes build tools installation
  - Uses MAX_JOBS for compilation
  - Verifies all packages
  - Ready to use!

✓ colab_fix_simple_knn.ipynb - DEDICATED FIX
  - Run this if simple-knn fails
  - Standalone troubleshooter
  - Verbose compilation output

================================================================================
STEP-BY-STEP FIX IN YOUR CURRENT NOTEBOOK
================================================================================

If you're already running colab_minimal_setup.ipynb and hit the error:

1. INSERT NEW CELL BEFORE simple-knn installation:

!pip install --upgrade pip setuptools wheel ninja

2. REPLACE the simple-knn installation cell with:

%cd submodules/simple-knn
!MAX_JOBS=4 pip install -e . -v
%cd ../..

3. RUN the cells

================================================================================
SAME FIX FOR DIFF-GAUSSIAN-RASTERIZATION
================================================================================

Apply same fix to diff-gaussian-rasterization:

%cd submodules/diff-gaussian-rasterization
!MAX_JOBS=4 pip install -e . -v
%cd ../..

================================================================================
WHY THIS WORKS
================================================================================

MAX_JOBS=4:
- Limits parallel compilation jobs
- Prevents out-of-memory during build
- Slower but more stable

ninja:
- Faster build system than make
- Better parallelization
- Required by some PyTorch extensions

-v (verbose):
- Shows compilation progress
- Helps debug if still failing
- Shows which file is being compiled

================================================================================
VERIFICATION AFTER FIX
================================================================================

Run this in a new cell:

try:
    import simple_knn
    print("✓ simple-knn works!")
except ImportError as e:
    print(f"✗ Still failing: {e}")

try:
    import diff_gaussian_rasterization
    print("✓ diff-gaussian-rasterization works!")
except ImportError as e:
    print(f"✗ Still failing: {e}")

================================================================================
ALTERNATIVE: SKIP SUBMODULES TEMPORARILY
================================================================================

If compilation keeps failing, you can test other features first:

Skip the submodule installation cells
Train without Gaussian splatting temporarily
Focus on DiT, VAE, Orthogonality Loss testing
Add submodules later when you resolve build issues

NOTE: Full training requires these submodules!

================================================================================
COMMON BUILD ERRORS & FIXES
================================================================================

Error: "nvcc not found"
-----------------------
CUDA compiler not accessible
Fix: Ensure GPU runtime is enabled in Colab
     Runtime → Change runtime type → GPU

Error: "ninja: command not found"
---------------------------------
Ninja build system missing
Fix: !pip install ninja

Error: "out of memory during build"
-----------------------------------
Too many parallel jobs
Fix: Use MAX_JOBS=1 (slowest but least memory)
     !MAX_JOBS=1 pip install -e .

Error: "gcc version incompatible"
---------------------------------
Compiler version mismatch
Fix: Usually not an issue on Colab
     If occurs, restart runtime

================================================================================
RECOMMENDED: USE NEW NOTEBOOK
================================================================================

Instead of fixing manually, use:

colab_complete_setup.ipynb

This notebook:
✓ Has all fixes pre-applied
✓ Installs build tools first
✓ Uses MAX_JOBS for compilation
✓ Verifies all installations
✓ Includes your GitHub URL (Abiram929)

Just upload and run!

================================================================================
COMPARISON: OLD VS NEW CELL
================================================================================

OLD (fails):
------------
%cd submodules/simple-knn
!pip install -e .
%cd ../..

NEW (works):
------------
!pip install --upgrade ninja setuptools wheel
%cd submodules/simple-knn
!MAX_JOBS=4 pip install -e . -v
%cd ../..

Key differences:
✓ Install build tools first
✓ Use MAX_JOBS to limit memory
✓ Add -v for verbose output
✓ Upgrade pip/setuptools

================================================================================
TIMELINE
================================================================================

With fix:
- Build tools: 1 min
- diff-gaussian-rasterization: 3-5 min
- simple-knn: 2-3 min
- Total: ~5-10 min compilation

Without fix:
- Immediate failure
- No progress

================================================================================
SUMMARY
================================================================================

Problem: simple-knn compilation fails
Root cause: Missing build dependencies

Solution:
1. Install ninja, setuptools, wheel
2. Use MAX_JOBS=4 to limit parallelism
3. Add -v for verbose output

Quick fix: Use colab_complete_setup.ipynb (has fix included)

After fix: Compilation takes 5-10 minutes but succeeds

================================================================================
